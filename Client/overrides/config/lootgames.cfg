# Configuration file

general {
    # If this is set to false, then puzzle master won't start any game.
    # Default: true
    B:areMinigamesEnabled=true

    # Available variants: debug, trace
    # Debug: additionally prints debug messages.
    # Trace: additionally prints debug and trace messages.
    # Default: debug
    S:debugLevel=debug

    # If this is equal true, then it will print additional info to log files.
    # Default: false
    B:enableDebug=false

    ##########################################################################################################
    # worldgen
    #--------------------------------------------------------------------------------------------------------#
    # Regulates dungeon appearing in world.
    ##########################################################################################################

    worldgen {
        # Whitelisted dimensions' ids that were allowed for dungeon generation and rhomb size.
        # Rhomb size means the size of rhombs, which will imaginary cover the world. Dungeon will be generated in each rhomb.
        # So the larger the size, the less chance of generation.
        # Rhomb size must be between 5 and 100.
        # Example of array element: 0; 20 - this means that dungeons will be generated in rhombs with size equal to 20 in the overworld (ID = 0).
        # Default: {0; 20}
        S:dimAndRhombList <
            0; 20
         >

        # If this is equal true, then dungeon generation will be enabled.
        # Default: true
        B:isDungeonWorldGenEnabled=true
    }

    ##########################################################################################################
    # gameoflight
    #--------------------------------------------------------------------------------------------------------#
    # Regulates "Game of Light" minigame.
    ##########################################################################################################

    gameoflight {
        # At which stage should the playfield become a full 3x3 pattern? Set 0 to disable and keep the 4-block size; set 1 to always start with 3x3.
        # Default: 2.
        # Min: 0
        # Max: 4
        I:expandFieldAtStage=2

        # How many attempts does a player have? The structure will fail after max attempt count is passed, or the player will win if he beat at least 1 stage.
        # Default: 3.
        I:maxAttempts=3

        # Enable or disable struct exploding on max failed attempts.
        # Default: true
        B:onFailExplode=true

        # Enable or disable struct filling with lava on max failed attempts.
        # Default: true
        B:onFailLava=true

        # Enable or disable struct filling with zombies on max failed attempts.
        # Default: true
        B:onFailZombies=true

        # How many digits should be randomly chosen and shown at game-start?
        # Default: 2.
        I:startDigitAmount=2

        # How long does it take to timeout a game? Value is in seconds. How long does it take to timeout a game? Value is in seconds. If player has been inactive for given time, the game will go to sleep. The next player can start the game from the beginning.
        # Default: 60
        I:timeout=60

        ##########################################################################################################
        # stage1
        #--------------------------------------------------------------------------------------------------------#
        # Regulates characteristics of stage 1.
        ##########################################################################################################

        stage1 {
            # The amount of time (in ticks; 20 ticks = 1s) the symbol will be displayed.
            # Default: Stage 1 -> {24}, Stage 2 -> {16}, Stage 3 -> {12}, Stage 4 -> {10}
            # Min: 2
            # Max: 40
            I:displayTime=24

            # Name of the loottable, items from which will be generated in the chest of this stage. This can be adjusted per-Dimension in S:DimensionalConfig.
            # Default: Stage 1 -> minecraft:chests/simple_dungeon, Stage 2 -> minecraft:chests/abandoned_mineshaft, Stage 3 -> minecraft:chests/jungle_temple, Stage 4 -> minecraft:chests/stronghold_corridor
            S:lootTable=minecraft:chests/simple_dungeon

            # Maximum amount of items to be generated in chest. If this is set to -1, max limit will be disabled.
            # Default: Stage 1 -> {4}, Stage 2 -> {6}, Stage 3 -> {8}, Stage 4 -> {10}
            # Min: -1
            # Max: 256
            I:maxItems=15

            # Minimum amount of items to be generated in chest. Won't be applied, if count of items in bound loot table are less than it. If min and max are set to -1, the limits will be disabled.
            # Default: Stage 1 -> {2}, Stage 2 -> {4}, Stage 3 -> {6}, Stage 4 -> {8}
            # Min: -1
            # Max: 256
            I:minItems=19

            # Minimum correct rounds required to complete this stage and unlock the chest. This can be adjusted per-Dimension in S:DimensionalConfig.
            # Default: Stage 1 -> {5}, Stage 2 -> {10}, Stage 3 -> {15}, Stage 4 -> {20}
            # Min: 1
            # Max: 256
            I:minRoundsRequiredToPass=5

            # Here you can add different loottables to each dimension. If dimension isn't in this list, then game will take default loottable for this stage.
            # Syntax: <dimension_id>; <loottable_name>; <min_rounds_required_to_pass>
            # <loottable_name> - The loottable name for the chest in this stage. Can be skipped. In this case you just need to write semicolon, example: "{0; ; 10}"
            # <min_rounds_required_to_pass> - Minimum correct rounds required to complete this stage and unlock the chest. Can be skipped. Example with skipping: "{0; minecraft:chests/simple_dungeon; }"
            # General Example: { 0; minecraft:chests/simple_dungeon; 10 }
            # Default: {}
            S:perDimensionConfigs <
             >

            # If true, the pattern will randomize on each round in this stage.
            # Default: Stage 1 -> false, Stage 2 -> false, Stage 3 -> false, Stage 4 -> true
            B:randomizeSequence=false
        }

        ##########################################################################################################
        # stage2
        #--------------------------------------------------------------------------------------------------------#
        # Regulates characteristics of stage 2.
        ##########################################################################################################

        stage2 {
            # The amount of time (in ticks; 20 ticks = 1s) the symbol will be displayed.
            # Default: Stage 1 -> {24}, Stage 2 -> {16}, Stage 3 -> {12}, Stage 4 -> {10}
            # Min: 2
            # Max: 40
            I:displayTime=16

            # Name of the loottable, items from which will be generated in the chest of this stage. This can be adjusted per-Dimension in S:DimensionalConfig.
            # Default: Stage 1 -> minecraft:chests/simple_dungeon, Stage 2 -> minecraft:chests/abandoned_mineshaft, Stage 3 -> minecraft:chests/jungle_temple, Stage 4 -> minecraft:chests/stronghold_corridor
            S:lootTable=minecraft:chests/abandoned_mineshaft

            # Maximum amount of items to be generated in chest. If this is set to -1, max limit will be disabled.
            # Default: Stage 1 -> {4}, Stage 2 -> {6}, Stage 3 -> {8}, Stage 4 -> {10}
            # Min: -1
            # Max: 256
            I:maxItems=-1

            # Minimum amount of items to be generated in chest. Won't be applied, if count of items in bound loot table are less than it. If min and max are set to -1, the limits will be disabled.
            # Default: Stage 1 -> {2}, Stage 2 -> {4}, Stage 3 -> {6}, Stage 4 -> {8}
            # Min: -1
            # Max: 256
            I:minItems=-1

            # Minimum correct rounds required to complete this stage and unlock the chest. This can be adjusted per-Dimension in S:DimensionalConfig.
            # Default: Stage 1 -> {5}, Stage 2 -> {10}, Stage 3 -> {15}, Stage 4 -> {20}
            # Min: 1
            # Max: 256
            I:minRoundsRequiredToPass=10

            # Here you can add different loottables to each dimension. If dimension isn't in this list, then game will take default loottable for this stage.
            # Syntax: <dimension_id>; <loottable_name>; <min_rounds_required_to_pass>
            # <loottable_name> - The loottable name for the chest in this stage. Can be skipped. In this case you just need to write semicolon, example: "{0; ; 10}"
            # <min_rounds_required_to_pass> - Minimum correct rounds required to complete this stage and unlock the chest. Can be skipped. Example with skipping: "{0; minecraft:chests/simple_dungeon; }"
            # General Example: { 0; minecraft:chests/simple_dungeon; 10 }
            # Default: {}
            S:perDimensionConfigs <
             >

            # If true, the pattern will randomize on each round in this stage.
            # Default: Stage 1 -> false, Stage 2 -> false, Stage 3 -> false, Stage 4 -> true
            B:randomizeSequence=false
        }

        ##########################################################################################################
        # stage3
        #--------------------------------------------------------------------------------------------------------#
        # Regulates characteristics of stage 3.
        ##########################################################################################################

        stage3 {
            # The amount of time (in ticks; 20 ticks = 1s) the symbol will be displayed.
            # Default: Stage 1 -> {24}, Stage 2 -> {16}, Stage 3 -> {12}, Stage 4 -> {10}
            # Min: 2
            # Max: 40
            I:displayTime=12

            # Name of the loottable, items from which will be generated in the chest of this stage. This can be adjusted per-Dimension in S:DimensionalConfig.
            # Default: Stage 1 -> minecraft:chests/simple_dungeon, Stage 2 -> minecraft:chests/abandoned_mineshaft, Stage 3 -> minecraft:chests/jungle_temple, Stage 4 -> minecraft:chests/stronghold_corridor
            S:lootTable=minecraft:chests/jungle_temple

            # Maximum amount of items to be generated in chest. If this is set to -1, max limit will be disabled.
            # Default: Stage 1 -> {4}, Stage 2 -> {6}, Stage 3 -> {8}, Stage 4 -> {10}
            # Min: -1
            # Max: 256
            I:maxItems=-1

            # Minimum amount of items to be generated in chest. Won't be applied, if count of items in bound loot table are less than it. If min and max are set to -1, the limits will be disabled.
            # Default: Stage 1 -> {2}, Stage 2 -> {4}, Stage 3 -> {6}, Stage 4 -> {8}
            # Min: -1
            # Max: 256
            I:minItems=-1

            # Minimum correct rounds required to complete this stage and unlock the chest. This can be adjusted per-Dimension in S:DimensionalConfig.
            # Default: Stage 1 -> {5}, Stage 2 -> {10}, Stage 3 -> {15}, Stage 4 -> {20}
            # Min: 1
            # Max: 256
            I:minRoundsRequiredToPass=15

            # Here you can add different loottables to each dimension. If dimension isn't in this list, then game will take default loottable for this stage.
            # Syntax: <dimension_id>; <loottable_name>; <min_rounds_required_to_pass>
            # <loottable_name> - The loottable name for the chest in this stage. Can be skipped. In this case you just need to write semicolon, example: "{0; ; 10}"
            # <min_rounds_required_to_pass> - Minimum correct rounds required to complete this stage and unlock the chest. Can be skipped. Example with skipping: "{0; minecraft:chests/simple_dungeon; }"
            # General Example: { 0; minecraft:chests/simple_dungeon; 10 }
            # Default: {}
            S:perDimensionConfigs <
             >

            # If true, the pattern will randomize on each round in this stage.
            # Default: Stage 1 -> false, Stage 2 -> false, Stage 3 -> false, Stage 4 -> true
            B:randomizeSequence=false
        }

        ##########################################################################################################
        # stage4
        #--------------------------------------------------------------------------------------------------------#
        # Regulates characteristics of stage 4.
        ##########################################################################################################

        stage4 {
            # The amount of time (in ticks; 20 ticks = 1s) the symbol will be displayed.
            # Default: Stage 1 -> {24}, Stage 2 -> {16}, Stage 3 -> {12}, Stage 4 -> {10}
            # Min: 2
            # Max: 40
            I:displayTime=10

            # Name of the loottable, items from which will be generated in the chest of this stage. This can be adjusted per-Dimension in S:DimensionalConfig.
            # Default: Stage 1 -> minecraft:chests/simple_dungeon, Stage 2 -> minecraft:chests/abandoned_mineshaft, Stage 3 -> minecraft:chests/jungle_temple, Stage 4 -> minecraft:chests/stronghold_corridor
            S:lootTable=minecraft:chests/stronghold_corridor

            # Maximum amount of items to be generated in chest. If this is set to -1, max limit will be disabled.
            # Default: Stage 1 -> {4}, Stage 2 -> {6}, Stage 3 -> {8}, Stage 4 -> {10}
            # Min: -1
            # Max: 256
            I:maxItems=-1

            # Minimum amount of items to be generated in chest. Won't be applied, if count of items in bound loot table are less than it. If min and max are set to -1, the limits will be disabled.
            # Default: Stage 1 -> {2}, Stage 2 -> {4}, Stage 3 -> {6}, Stage 4 -> {8}
            # Min: -1
            # Max: 256
            I:minItems=-1

            # Minimum correct rounds required to complete this stage and unlock the chest. This can be adjusted per-Dimension in S:DimensionalConfig.
            # Default: Stage 1 -> {5}, Stage 2 -> {10}, Stage 3 -> {15}, Stage 4 -> {20}
            # Min: 1
            # Max: 256
            I:minRoundsRequiredToPass=16

            # Here you can add different loottables to each dimension. If dimension isn't in this list, then game will take default loottable for this stage.
            # Syntax: <dimension_id>; <loottable_name>; <min_rounds_required_to_pass>
            # <loottable_name> - The loottable name for the chest in this stage. Can be skipped. In this case you just need to write semicolon, example: "{0; ; 10}"
            # <min_rounds_required_to_pass> - Minimum correct rounds required to complete this stage and unlock the chest. Can be skipped. Example with skipping: "{0; minecraft:chests/simple_dungeon; }"
            # General Example: { 0; minecraft:chests/simple_dungeon; 10 }
            # Default: {}
            S:perDimensionConfigs <
             >

            # If true, the pattern will randomize on each round in this stage.
            # Default: Stage 1 -> false, Stage 2 -> false, Stage 3 -> false, Stage 4 -> true
            B:randomizeSequence=true
        }

    }

}


